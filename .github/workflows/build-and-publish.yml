name: Continuous Integration

on:
  release:
    types: # This configuration does not affect the page_build event above
      - created
        
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Fetch tags and master for GitVersion
      run: |
        git fetch --tags
        git branch --create-reflog master origin/master
    
    - name: GitVersion
      id: gitversion  # step id used as reference for output values
      uses: roryprimrose/rungitversion@v1

    - name: Update project version
      uses: roryprimrose/set-vs-sdk-project-version@v1
      with:
        version: ${{ steps.gitversion.outputs.NuGetVersionV2 }}
        assemblyVersion: ${{ steps.gitversion.outputs.AssemblySemVer }}
        fileVersion: ${{ steps.gitversion.outputs.MajorMinorPatch }}
        informationalVersion: ${{ steps.gitversion.outputs.InformationalVersion }}

    - uses: actions/checkout@v1
    - name: Setup Dotnet Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.100
        source-url: https://nuget.pkg.github.com/Dualog/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Setup Nuget Config
      run: sed 's/GITHUB_TOKEN/${{ secrets.NUGET_TOKEN }}/g' .nuget.config > nuget.config

    - name: Build
      run: dotnet build --configuration Release

    - name: Prep Version String
      run: echo ::set-env name=VERSION_NUMBER::$(echo ${{ steps.bump_version.outputs.new_tag }} | sed 's/[v]//g')

    - name: Define Package Name
      run: echo ::set-env name=PACKAGE_NAME::$"SMBLibrary/bin/Release/SMBLibraryCore.Client.${{ env.VERSION_NUMBER }}.nupkg"

    - name: Pack
      run: dotnet pack --configuration Release

    - name: Publish Package
      run: dotnet nuget push SMBLibrary/bin/Release/*.nupkg -k ${{ secrets.NUGET_TOKEN }} -s https://api.nuget.org/v3/index.json


    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.bump_version.outputs.new_tag }}
        release_name: Release ${{ github.ref }}
